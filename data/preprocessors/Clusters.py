# -*- coding: utf-8 -*-
"""Copy of DV.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Wr0TyaBRWETLhAMBxqbJn2R9SlCjl8UG
"""

import pandas as pd
import numpy as np
from sklearn.cluster import KMeans
# import matplotlib as plt
import matplotlib.pyplot as plt
from sklearn.decomposition import PCA

df_main = pd.read_csv('/content/Friday-Sunday-OnlyCheckIn.csv')
ride_details = pd.read_csv('/content/Ride-Details.csv')

len(df_main)

df_main.columns
# df_main['Ridecount']

len(df_main['id'].unique())

df_col= pd.DataFrame()
df_col['RideCount'] = df_main['id'].value_counts()

  # if(i[id] in dic):
  #   dic[id]+=1
  # else:
  #   dic[id] = 1
print(df_col.iloc[:5])
# df_col = df_col.drop(columns=
                    # )

p = df_main.groupby(by=["id",'Real World Type'], dropna=False).count()
dic = {}
# print(df_main.head())
for row in df_main.iterrows():
  if row[1][1] in dic:
    if row[1][8] == "Entrance":
      dic[row[1][1]][0] += 1
    elif row[1][8] == "Everybody":
      dic[row[1][1]][1] += 1
    elif row[1][8] == "First Aid":
        dic[row[1][1]][2] += 1
    if row[1][8] == "Kiddie":
        dic[row[1][1]][3] += 1
    elif row[1][8] == "Pavilion":
        dic[row[1][1]][4] += 1
    elif row[1][8] == "Show Hall":
        dic[row[1][1]][5] += 1
    elif row[1][8] == "Stage":
        dic[row[1][1]][6] += 1
    elif row[1][8] == "Thrill":
        dic[row[1][1]][7] += 1
  else:
    dic[row[1][1]] = [0]*8
    if row[1][8] == "Entrance":
      dic[row[1][1]][0] = 1
    elif row[1][8] == "Everybody":
      dic[row[1][1]][1] = 1
    elif row[1][8] == "First Aid":
        dic[row[1][1]][2] = 1
    if row[1][8] == "Kiddie":
        dic[row[1][1]][3] = 1
    elif row[1][8] == "Pavilion":
        dic[row[1][1]][4] = 1
    elif row[1][8] == "Show Hall":
        dic[row[1][1]][5] = 1
    elif row[1][8] == "Stage":
        dic[row[1][1]][6] = 1
    elif row[1][8] == "Thrill":
        dic[row[1][1]][7] = 1

print(dic)

x = pd.DataFrame(columns=['id','Entrance','Everybody','First Aid','Kiddie','Pavilion','Show Hall','Stage','Thrill'])
print(x)

for i in dic:
  x = x.append({'id': i, 'Entrance' : dic[i][0], 'Everybody' : dic[i][1],'First Aid' : dic[i][2],'Kiddie' : dic[i][3],'Pavilion' : dic[i][4],'Show Hall' : dic[i][5],'Stage' : dic[i][6],'Thrill' : dic[i][7]}, ignore_index=True)

print(x[:2])

s_x = x['id']
S_X = np.array(s_x)
X = x.drop(columns = ['id'])
pca = PCA(n_components=2)
principalComponents = pca.fit_transform(x)
principalDf = pd.DataFrame(data = principalComponents
             , columns = ['principal component 1', 'principal component 2'])
X = np.array(X)
kmeans = KMeans(n_clusters = 5).fit(X)

print(len(s_x))
# S_X = S_X[:]

y_kmeans = kmeans.fit_predict(X)# for i in ans:
print(len(X),len(y_kmeans),len(S_X))

dframe = pd.DataFrame({'index':s_x,'label':y_kmeans})

print(dframe.iloc[:10])
dframe.to_csv('soham.csv', index = False)

a = kmeans.predict(X[:1])
print(a)

len(X[y_kmeans==4, 0])
d1 = pd.DataFrame(columns=['Entrance','Everybody','First Aid','Kiddie','Pavilion','Show Hall','Stage','Thrill'])
d2 = pd.DataFrame(columns=['Entrance','Everybody','First Aid','Kiddie','Pavilion','Show Hall','Stage','Thrill'])
d3 = pd.DataFrame(columns=['Entrance','Everybody','First Aid','Kiddie','Pavilion','Show Hall','Stage','Thrill'])
d4 = pd.DataFrame(columns=['Entrance','Everybody','First Aid','Kiddie','Pavilion','Show Hall','Stage','Thrill'])
d5 = pd.DataFrame(columns=['Entrance','Everybody','First Aid','Kiddie','Pavilion','Show Hall','Stage','Thrill'])
for i in range(len(X)):
  a = kmeans.predict(X[i:i+1])
  if(a[0]==0):
    d1 = d1.append({'Entrance' : X[i][0], 'Everybody' : X[i][1],'First Aid' : X[i][2],'Kiddie' : X[i][3],'Pavilion' : X[i][4],'Show Hall' : X[i][5],'Stage' : X[i][6],'Thrill' : X[i][7]},ignore_index=True)

  if(a[0]==1):
    d2 = d2.append({'Entrance' : X[i][0], 'Everybody' : X[i][1],'First Aid' : X[i][2],'Kiddie' : X[i][3],'Pavilion' : X[i][4],'Show Hall' : X[i][5],'Stage' : X[i][6],'Thrill' : X[i][7]},ignore_index=True)

  if(a[0]==2):
    d3 = d3.append({'Entrance' : X[i][0], 'Everybody' : X[i][1],'First Aid' : X[i][2],'Kiddie' : X[i][3],'Pavilion' : X[i][4],'Show Hall' : X[i][5],'Stage' : X[i][6],'Thrill' : X[i][7]},ignore_index=True)

  if(a[0]==3):
    d4 = d4.append({'Entrance' : X[i][0], 'Everybody' : X[i][1],'First Aid' : X[i][2],'Kiddie' : X[i][3],'Pavilion' : X[i][4],'Show Hall' : X[i][5],'Stage' : X[i][6],'Thrill' : X[i][7]},ignore_index=True)

  if(a[0]==4):
    d5 = d5.append({'Entrance' : X[i][0], 'Everybody' : X[i][1],'First Aid' : X[i][2],'Kiddie' : X[i][3],'Pavilion' : X[i][4],'Show Hall' : X[i][5],'Stage' : X[i][6],'Thrill' : X[i][7]},ignore_index=True)

print(d4,d3)

# TreemapData = 6 clusters
# 6 clusters another 8 clusters
data1 = pd.DataFrame(columns=['Entrance','Everybody','First Aid','Kiddie','Pavilion','Show Hall','Stage','Thrill'])


dict= {'Entrance':[d1['Entrance'].sum(), d2['Entrance'].sum(),d3['Entrance'].sum(),d4['Entrance'].sum(),d5['Entrance'].sum()] , 
       
       'First Aid':[d1['First Aid'].sum(), d2['First Aid'].sum(),d3['First Aid'].sum(),d4['First Aid'].sum(),d5['First Aid'].sum()],
       'Kiddie':[d1['Kiddie'].sum(), d2['Kiddie'].sum(),d3['Kiddie'].sum(),d4['Kiddie'].sum(),d5['Kiddie'].sum()]
 ,     'Everybody':[d1['Everybody'].sum(), d2['Everybody'].sum(),d3['Everybody'].sum(),d4['Everybody'].sum(),d5['Everybody'].sum()]


,'Pavilion':[d1['Pavilion'].sum(),
d2['Pavilion'].sum(),d3['Pavilion'].sum(),d4['Pavilion'].sum(),d5['Pavilion'].sum()]

,'Show Hall':[d1['Show Hall'].sum(),
d2['Show Hall'].sum(),d3['Show Hall'].sum(),d4['Show Hall'].sum(),d5['Show Hall'].sum()]

,'Stage':[d1['Stage'].sum(),
d2['Stage'].sum(),d3['Stage'].sum(),d4['Stage'].sum(),d5['Stage'].sum()]

,'Thrill':[d1['Thrill'].sum(),
d2['Thrill'].sum(),d3['Thrill'].sum(),d4['Thrill'].sum(),d5['Thrill'].sum()] }


df=pd.DataFrame(dict,index=['cluster1','cluster2','cluster3','cluster4','cluster5'])

# print(dict)
print(df)

df.to_csv("Clusters.csv")

o = pd.read_csv("/content/soham.csv")
labdic={}
for i in o.iterrows():
  labdic[int(i[1][0])] = int(i[1][1])
print(labdic)



clusters = {'cluster1':[],'cluster2':[],'cluster3':[],'cluster4':[],'cluster5':[]}
clus = pd.read_csv("/content/Clusters.csv")
for i,key in enumerate(clusters.keys()):
  for j,col in enumerate(list(clus.columns)):
    if j==0:
      continue
    clusters[key].append({'name':f'{col}','value':clus[f'{col}'].iloc[i],'cluster':i+1})
print(clusters)

with open('clusters_new.json','w') as f:
  json.dump(clusters,f)

